;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Настройки пользователя
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; The full name of the user logged in
(setq-default user-full-name "lynch513")
;; Full mailing address of user
(setq-default user-mail-adress "lynch513@yandex.ru")

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Включить меню бар, отключить тулбар
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(menu-bar-mode 1)
(tool-bar-mode -1)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Отключить автосохранение и файлы бекапов
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(setq make-backup-files nil)
(setq auto-save-list-file-name nil)
(setq auto-save-default nil)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Замена выделенного текста при наборе/вставке нового
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(delete-selection-mode 1)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Включение подсветки S выражении для Lisp
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;;(setq show-paren-style 'expression)
(setq show-paren-style 'parenthesis)
(show-paren-mode 2)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Сохранение сессии
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(desktop-save-mode 1)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Настройка отступов
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Пробелы вместо табов
(setq-default indent-tabs-mode nil)
;; Вместо таба 2 пробела
(setq-default tab-width 2)
(setq tab-width 2)
;; make tab key call indent command or insert tab character, depending on cursor position
(setq-default tab-always-indent nil) 
(setq-default c-basic-offset     2)
;; стандартная ширина отступа - 2 пробельных символа
(setq-default standart-indent    2)
;; сдвигать Lisp-выражения на 2 пробельных символа
(setq-default lisp-body-indent   2) 
;; (setq indent-line-function  'insert-tab) 

;; Настройка парных скобок и отступов после нажатия <Enter>
;; автозакрытие {},[],() с переводом курсора внутрь скобок
(electric-pair-mode   1)
;; отступы electric-indent-mod'ом (default in Emacs-24.4)
(electric-indent-mode 1) 

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Авто отступ при переходе на новую строку 
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; (define-key global-map (kbd "RET") 'newline-and-indent) 

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Скроллинг
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; вверх-вниз по 1 строке
(setq scroll-step               1)
;; сдвигать буфер верх/вниз когда курсор в 10 шагах от верхней/нижней границы
(setq scroll-margin            10) 
(setq scroll-conservatively 10000)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Short messages
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(defalias 'yes-or-no-p 'y-or-n-p)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Clipboard settings
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(setq x-select-enable-clipboard t)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; не добавлять новую строку в конец при смещении курсора стрелками
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(setq next-line-add-newlines nil) 

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Russian
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; (defun reverse-input-method (input-method)
;;   "Build the reverse mapping of single letters from INPUT-METHOD."
;;   (interactive
;;    (list (read-input-method-name "Use input method (default current): ")))
;;   (if (and input-method (symbolp input-method))
;;       (setq input-method (symbol-name input-method)))
;;   (let ((current current-input-method)
;;         (modifiers '(nil (control) (meta) (control meta))))
;;     (when input-method
;;       (activate-input-method input-method))
;;     (when (and current-input-method quail-keyboard-layout)
;;       (dolist (map (cdr (quail-map)))
;;         (let* ((to (car map))
;;                (from (quail-get-translation
;;                       (cadr map) (char-to-string to) 1)))
;;           (when (and (characterp from) (characterp to))
;;             (dolist (mod modifiers)
;;               (define-key local-function-key-map
;;                 (vector (append mod (list from)))
;;                 (vector (append mod (list to)))))))))
;;     (when input-method
;;       (activate-input-method current))))

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Просмотр и переключение открытых буферов по <f2>
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(require 'bs)
;; Включить в список *scratch*
;;(setq bs-configurations
;;       '(("files" "^\\*scratch\\*" nil nil bs-visits-non-file bs-sort-buffer-interns-are-last)))
(global-set-key (kbd "<f2>") 'bs-show)

;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
;; Перенос строк
;; ----------------------------------------------------------------------------------------------------------------------------------------------------------------
(setq-default truncate-lines t)
(global-set-key (kbd "<f9>") 'toggle-truncate-lines)


(provide 'scratch_my)
